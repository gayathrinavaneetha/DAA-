import sys
def prims_algorithm(graph):
    num_vertices = len(graph)
    selected_nodes = [False] * num_vertices
    selected_nodes[0] = True
    edges = []
    for _ in range(num_vertices - 1):
        minimum = sys.maxsize
        x = 0
        y = 0
        for i in range(num_vertices):
            if selected_nodes[i]:
                for j in range(num_vertices):
                    if not selected_nodes[j] and graph[i][j]:
                        if minimum > graph[i][j]:
                            minimum = graph[i][j]
                            x = i
                            y = j       
        edges.append((x, y, minimum))
        selected_nodes[y] = True
    return edges
graph = [
    [0, 2, 0, 6, 0],
    [2, 0, 3, 8, 5],
    [0, 3, 0, 0, 7],
    [6, 8, 0, 0, 9],
    [0, 5, 7, 9, 0]
]

mst = prims_algorithm(graph)
print("Edges in the Minimum Spanning Tree:")
for edge in mst:
    print(f"{edge[0]} - {edge[1]} with weight {edge[2]}")
